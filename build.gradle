def determineVersion() {
    return project.hasProperty('revision') ? project.getProperty('revision') : project.getProperty('version')
}

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'com.gradleup.shadow' version '8.3.6'
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://hub.spigotmc.org/nexus/content/repositories/snapshots/')
    }

    maven {
        url = uri('https://repo.dmulloy2.net/repository/public/')
    }

    maven {
        url = uri('https://oss.sonatype.org/content/repositories/snapshots/')
    }

    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }

    maven { url = uri('https://jitpack.io/') }
    maven { url = uri("https://repo.codemc.io/repository/maven-releases/") }
}

dependencies {
    implementation "org.bstats:bstats-bukkit:3.1.0"
    implementation "org.jetbrains:annotations:26.0.2"
    compileOnly "org.spigotmc:spigot-api:1.16.1-R0.1-SNAPSHOT"
    // 1.10-1.11: no .spigot() on commandSender
    // 1.12-1.15: has no HTML colors
    compileOnly "com.github.retrooper:packetevents-spigot:2.7.0"

    implementation "com.github.AvarionMC:yaml:1.1.7"
}

version = determineVersion()
project.ext.pluginVersion = version

java.sourceCompatibility = JavaVersion.VERSION_17

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc).configureEach {
    options.encoding = 'UTF-8'
}


shadowJar {
    archiveBaseName.set(project.description)
    archiveClassifier.set('')
    archiveVersion.set(project.version)

    // Optional: Exclude specific files
    exclude 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA'

    relocate("org.bstats", "org.avarion.bstats")
}

tasks.register('deploy', Copy) {
    dependsOn shadowJar
    from shadowJar
    into file("${projectDir}/../server/plugins")
}

processResources {
    filesMatching('plugin.yml') {
        expand(project.properties)
    }
}

tasks.deploy.dependsOn shadowJar
tasks.jar.finalizedBy deploy
